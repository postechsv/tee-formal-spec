fmod INVOKE-MESSAGE is
  pr SESSION-ID .
  pr IMP-FUNC-ID .
  pr IMP-EXP-LIST .

  sort InvokeMessage .

  op {_,_,_} : SessionId FuncId ValueList -> InvokeMessage [ctor] .
endfm

view InvokeMessage from TRIV to INVOKE-MESSAGE is
  sort Elt to InvokeMessage .
endv

--- This module defines calls to invoke TA.

omod INVOKE-TA-CALL is
  pr TA-INSTANCE-ID .
  pr INVOKE-MESSAGE .

  msg invokeTA : TaInstId InvokeMessage Oid -> Msg .
  msg invokeTAReturn : InvokeMessage Oid -> Msg .
endom

--- This module defines SMC arguments.

omod SECURE-MONITOR-CALL-ARG is
  pr TEE-CLIENT-API .
  pr INVOKE-MESSAGE .

  sort SmcArgument .

  op invokeMessage : InvokeMessage -> SmcArgument [ctor] .
  op requestor : Oid -> SmcArgument [ctor] .
  op {_,_} : TeeClientApi ValueList -> SmcArgument [ctor] .
endom

view SmcArgument from TRIV to SECURE-MONITOR-CALL-ARG is
  sort Elt to SmcArgument .
endv

--- This module defines SMC calls between REE and TEE execution environments.

omod SECURE-MONITOR-CALL is
  pr LIST{SmcArgument} .

  msg smcRequest : List{SmcArgument} -> Msg .
  msg smcReturn  : List{SmcArgument} -> Msg .
endom

--- This module defines execution environments for REE and TEE.

mod EXECUTION-ENV is
  pr SECURE-MONITOR-CALL .
  inc CONFIGURATION .

  sort Env .

  var ARGS : List{SmcArgument} .
  vars REE TEE : Configuration .

  op {_} : Configuration -> Env [ctor] .
  op _|_ : Env Env -> Env [format (d d n d)] .
  
--- Version In Paper
  --- rl [accept-smc-request] : 
  ---   { REE smcReq(ARGS) } | { TEE } 
  ---   => 
  ---   { REE } | { TEE smcReq(ARGS) } 
  --- . 
  
  --- rl [return-smc-request] : 
  ---   { REE } | { TEE smcRet(ARGS) } 
  ---   => 
  ---   { REE smcRet(ARGS) } | { TEE } 
  --- .

--- Model/Implementation Specific Version (In Order)
  crl [accept-smc-request] :
    { REE smcRequest(ARGS) } | { TEE }
    =>
    { REE } | { TEE smcRequest(ARGS) }
  if TEE =/= none
  .

  rl [return-smc-request] :
    { REE } | { TEE smcReturn(ARGS) }
    =>
    { REE smcReturn(ARGS) } | { TEE }
  .

endm

--- This module defines storage status constants.

fmod STORAGE-STATUS is
  sort StorageStatus .

  op storageNormal : -> StorageStatus [ctor] .
  op outOfSpace : -> StorageStatus [ctor] .
  op storageCorrupt : -> StorageStatus [ctor] .
  op storageInAccessible : -> StorageStatus [ctor] .
endfm

view StorageStatus from TRIV to STORAGE-STATUS is
  sort Elt to StorageStatus .
endv

fmod SERVICE is
  sorts Service ServiceReturn .
endfm

view Service from TRIV to SERVICE is
  sort Elt to Service .
endv

view ServiceReturn from TRIV to SERVICE is
  sort Elt to ServiceReturn .
endv

fmod PROGRAM-CELL is
  pr IMP-PROGRAM .

  sort ProgramCell .
  
  op [_] : Program -> ProgramCell [ctor] .
endfm

view ProgramCell from TRIV to PROGRAM-CELL is
  sort Elt to ProgramCell .
endv

--- This module defines execution environments for REE and TEE.

omod TEE-OS is
  pr NAT .
  pr TA-INSTANCE-ID .
  pr MAP{AppId,ProgramCell} .
  pr MAP{SessionId,TaInstId} .
  pr MAP{AppId,Set{FileId}} .
  pr MAP{AppId,StorageStatus} .
  pr MAP{SessionId,List{SmcArgument}} .
  pr MAP{AppId,Set{TaObjectId}} * (op undefined to noObject) .
  pr LIST{Service} .
  pr LIST{ServiceReturn} .
  
--- Version In Paper
  --- class Storage | status : StorageStatus, files : Set{FileName}, counter : Nat .
  --- class TrustedOS | sess : Map{SessionId,Oid} .

--- Actual Implemenation
  class TeeOSKernel | opened-session : Map{SessionId,TaInstId}, session-counter : Nat,
                      storage : Map{AppId,Set{FileId}}, storage-status : Map{AppId,StorageStatus}, 
                      service-request-ta : AppId?, service-request-ta-inst : TaInstId?,
                      service-in : List{Service}, service-out : List{ServiceReturn},
                      temporary-objects : Map{AppId,Set{TaObjectId}},
                      ta-prog-map : Map{AppId,ProgramCell} .
endom

fmod TEE-OS-SERVICE is
  pr SERVICE .
  pr STORAGE-STATUS .
  pr SET{FileId} .
  pr APP-ID .
  pr TA-INSTANCE-ID .

  op getStorageStatus : -> Service [ctor] .
  op storageStatus : StorageStatus -> ServiceReturn [ctor] .

  op checkFileExist : FileId -> Service [ctor] .
  op fileExist : -> ServiceReturn [ctor] .
  op noFileExist : -> ServiceReturn [ctor] .

  op notifyFileCreation : FileId -> Service [ctor] .
  op notifyFileDeletion : FileId -> Service [ctor] .
  op notifyFileRename : FileId FileId -> Service [ctor] .
  op acceptNotification : -> ServiceReturn [ctor] .

--- TODO: NEED TO UPDATE OP NAME
  op getPersistentList : AppId -> Service [ctor] .
  op filesInStorage : Set{FileId} -> ServiceReturn [ctor] .
  op storageEmpty : -> ServiceReturn [ctor] .

--- Session
  op openTASession : AppId -> Service [ctor] .
  op openSessionSuccess : TaInstId -> ServiceReturn [ctor] .
endfm

--- This module defines a device class, modeling storage devices.

omod DEVICE is
  pr DEVICE-ID .
  pr EXECUTION-ENV .

  subsort DeviceId < Oid .
  class Device | execution-envs : Env .

endom

--- This module defines id generators for TEE APIs.

fmod ID-GEN is
  pr NAT .
  pr APP-ID .
  pr TA-INSTANCE-ID .
  pr TA-OBJECT-ID .
  pr DEVICE-ID .
  pr SESSION-ID .

  op taOid : Nat TaInstId -> TaObjectId [ctor] .
  op richAppId : Nat -> AppId [ctor] .
  op trustAppId : Nat -> TaInstId [ctor] .
  op deviceId : Nat -> DeviceId [ctor] .
  op sessionId : Nat -> SessionId [ctor] .
endfm